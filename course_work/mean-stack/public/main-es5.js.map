{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","AppModule","config","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","authService","_flashMessagesService","router","user","username","password","authenticateUser","subscribe","data","result","console","log","success","storeUserData","token","show","cssClass","timeout","msg","navigate","onLoginSubmit","NavbarComponent","logout","ProfileComponent","getProfile","profile","err","RegisterComponent","validateService","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","AuthGuard","isLoggedIn","providedIn","AuthService","http","jwtHelper","headers","append","post","setItem","authToken","loadToken","httpOptions","get","clear","isTokenExpired","ValidateService","undefined","re","test","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuard } from './guards/auth.guard'\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service'\nimport { AuthGuard } from './guards/auth.guard'\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"id_token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter\n      }\n    })\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your Dashboard</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Authentication App</h1>\n    <p class=\"lead\">Welcome to our custom MEAN authentication application built from scratch </p>\n    <div>\n      <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a class=\"btn btn-dark\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h3>Express Backend</h3>\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>Angular-CLI</h3>\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>JWT Tokens</h3>\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService,\n    private _flashMessagesService: FlashMessagesService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      const result = data as any\n      console.log(result)\n      if (result.success) {\n        this.authService.storeUserData(result.token, result.user)\n        this._flashMessagesService.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000})\n      } else {\n        this._flashMessagesService.show(result.msg, {cssClass: 'alert-danger', timeout: 5000})\n        this.router.navigate(['login'])\n      }\n    })\n  }\n}\n","<h2 class=\"page-header\" >Login</h2>\n<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"Username\">Username</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" [(ngModel)]=\"username\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n        <label for=\"Password\">Password</label>\n        <input type=\"password\" class=\"form-control\" placeholder=\" Enter Password\" [(ngModel)]=\"password\" name=\"password\">\n        </div>\n        <div class=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" value=\"remember-me\"> Remember me\n          </label>\n        </div>\n        <input class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"Login\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n    private _flashMessagesService: FlashMessagesService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  onLogoutClick() {\n    this.authService.logout()\n    this._flashMessagesService.show('You are logged out', {cssClass: 'alert-success', timeout: 5000})\n    this.router.navigate(['/login'])\n    return false\n  }\n}\n","  <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item active\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav\">\n            <li *ngIf=\"authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n            </li>\n            <li *ngIf=\"authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n            </li>\n            <li *ngIf=\"!authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n            </li>\n            <li *ngIf=\"!authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n            </li>\n            <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\" (click)='onLogoutClick()'>Logout</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(data => {\n      console.log(data)\n      const profile = data as any\n      this.user = profile.user\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Username : {{user.username}}</li>\n      <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service'\nimport { FlashMessagesService } from 'angular2-flash-messages'\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String\n  username: String\n  email: String\n  password: String\n\n  constructor(private validateService: ValidateService, \n    private _flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    if (!this.validateService.validateRegister(user)) {\n      this._flashMessagesService.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    if (!this.validateService.validateEmail(this.email)) {\n      this._flashMessagesService.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    // register user\n    this.authService.registerUser(user).subscribe(data => {\n      if (data['success']) {\n        this._flashMessagesService.show('You are now registered', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login'])\n      } else {\n        this._flashMessagesService.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register'])\n      }\n    })\n  }\n\n}\n","<div>\n    <h2 class=\"page-header\">Register</h2>\n    <form (submit)=\"onRegisterSubmit()\" >\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n    </form>\n  </div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n        private router: Router) {}\n\n    canActivate() {\n        if(this.authService.isLoggedIn()) {\n            return true\n        } else {\n            return this.router.navigate(['/login'])\n            return false\n        }\n    }\n\n}   ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any\n  user: any\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token)\n    localStorage.setItem('user', user)\n    this.authToken = token\n    this.user = user\n  }\n\n  getProfile() {\n    this.loadToken()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': this.authToken\n      })\n    }\n    console.log('Authorization: ', this.authToken)\n    return this.http.get('http://localhost:3000/users/profile', httpOptions)\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token')\n    this.authToken = token\n  }\n\n  logout() {\n    this.authToken = null\n    this.user = null\n    localStorage.clear()\n  }\n\n  isLoggedIn() {\n    return !this.jwtHelper.isTokenExpired()\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined) {\n      return false\n    }\n    return true\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}