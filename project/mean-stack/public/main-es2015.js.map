{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/blog/blog.component.ts","./src/app/components/blog/blog.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/newblog/newblog.component.ts","./src/app/components/newblog/newblog.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/viewblog/viewblog.component.ts","./src/app/components/viewblog/viewblog.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/blog.service.ts","./src/app/services/profile.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { NewblogComponent } from './components/newblog/newblog.component'\nimport { ViewblogComponent } from './components/viewblog/viewblog.component'\nimport { AuthGuard } from './guards/auth.guard'\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'blog', component: BlogComponent, canActivate: [AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'newblog', component: NewblogComponent, canActivate: [AuthGuard]},\n  {path: 'blog/:id', component: ViewblogComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { BlogComponent } from './components/blog/blog.component'\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service'\nimport { AuthGuard } from './guards/auth.guard';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NewblogComponent } from './components/newblog/newblog.component';\nimport { ViewblogComponent } from './components/viewblog/viewblog.component';\n\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"id_token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    BlogComponent,\n    NewblogComponent,\n    ViewblogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter\n      }\n    }),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../../services/blog.service'\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  blogs: any\n\n  constructor(private blogService: BlogService) { }\n\n  ngOnInit(): void {\n    const user =  JSON.parse(localStorage.getItem('user'))\n    this.blogService.getBlogs(user).subscribe(data => {\n      this.blogs = (data as any).blogs\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div *ngFor=\"let blog of blogs; let i = index\">\n        <div *ngIf=\"i % 2 == 0\" class=\"row mb-2\">\n            <div class=\"col-md-6\">\n                <div class=\"card flex-md-row mb-4 box-shadow h-md-250\">\n                  <div class=\"card-body d-flex flex-column align-items-start\">\n                    <strong class=\"d-inline-block mb-2 text-primary\">{{ blog.tag }}</strong>\n                    <h3 class=\"mb-0\">\n                      <a class=\"text-dark\" href=\"#\">{{ blog.title }}</a>\n                    </h3>\n                    <p class=\"card-text mb-auto\">{{ blog.content | slice:0:200 }}...</p>\n                    <a [routerLink]=\"['/blog', blog._id]\" [state]=\"{data: blog}\">Continue reading</a>\n                  </div>\n                </div>\n            </div>\n            <div class=\"col-md-6\" *ngIf=\"i + 1 < blogs.length\">\n                <div class=\"card flex-md-row mb-4 box-shadow h-md-250\">\n                    <div class=\"card-body d-flex flex-column align-items-start\">\n                    <strong class=\"d-inline-block mb-2 text-primary\">{{ blogs[i+1].tag }}</strong>\n                    <h3 class=\"mb-0\">\n                        <a class=\"text-dark\" href=\"#\">{{ blogs[i+1].title }}</a>\n                    </h3>\n                    <p class=\"card-text mb-auto\">{{ blogs[i+1].content | slice:0:200 }}...</p>\n                    <a [routerLink]=\"['/blog', blogs[i+1]._id]\" [state]=\"{data: blogs[i+1]}\">Continue reading</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <a class=\"btn btn-raised btn-primary\" color=\"primary\" [routerLink]=\"['/newblog']\">New Blog</a> \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<main>\n  <section class=\"jumbotron text-center\">\n    <div class=\"container\">\n      <h1 class=\"jumbotron-heading\">MEAN Authentication App</h1>\n      <p class=\"lead text-muted\">Welcome to our custom MEAN authentication application built from scratch </p>\n      <div>\n        <a class=\"btn btn-raised btn-primary mr-2 \" color=\"primary\" [routerLink]=\"['/register']\">Register</a> \n        <a class=\"btn btn-raised\" [routerLink]=\"['/login']\">Login</a>\n      </div>\n    </div>\n  </section>\n</main>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService,\n    private _flashMessagesService: FlashMessagesService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      const result = data as any\n      if (result.success) {\n        this.authService.storeUserData(result.token, result.user)\n        this._flashMessagesService.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000})\n        this.router.navigate(['/blog'])\n      } else {\n        this._flashMessagesService.show(result.msg, {cssClass: 'alert-danger', timeout: 5000})\n        this.router.navigate(['login'])\n      }\n    })\n  }\n}\n","<div class=\"container\">\n  <h2 class=\"page-header\" >Login</h2>\n  <form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"Username\">Username</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" [(ngModel)]=\"username\" name=\"username\">\n          </div>\n          <div class=\"form-group\">\n          <label for=\"Password\">Password</label>\n          <input type=\"password\" class=\"form-control\" placeholder=\" Enter Password\" [(ngModel)]=\"password\" name=\"password\">\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\">\n            <label class=\"form-check-label\" for=\"defaultCheck1\">\n              Remember Me\n            </label>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n    private _flashMessagesService: FlashMessagesService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  onLogoutClick() {\n    this.authService.logout()\n    this._flashMessagesService.show('You are logged out', {cssClass: 'alert-success', timeout: 5000})\n    this.router.navigate(['/login'])\n    return false\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li *ngIf=\"authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item active\">\n                <a class=\"nav-link\" [routerLink]=\"['/blog']\">Blogs <span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav\">\n            <li *ngIf=\"authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n            </li>\n            <li *ngIf=\"!authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n            </li>\n            <li *ngIf=\"!authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n            </li>\n            <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\" (click)='onLogoutClick()'>Logout</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ValidateService } from '../../services/validate.service'\nimport { BlogService } from '../../services/blog.service'\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-newblog',\n  templateUrl: './newblog.component.html',\n  styleUrls: ['./newblog.component.css']\n})\nexport class NewblogComponent implements OnInit {\n  title: String\n  tag: String\n  content: String\n\n  constructor(private _flashMessagesService: FlashMessagesService, \n    private router: Router, \n    private validateService: ValidateService,\n    private blogService: BlogService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    const blog = {\n      title: this.title,\n      tag: this.tag,\n      content: this.content\n    }\n    const user =  JSON.parse(localStorage.getItem('user'))\n\n    if (!this.validateService.validateBlog(blog)) {\n      this._flashMessagesService.show('Please fill in all the fields of the blog', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n    \n    this.blogService.addNewBlog(blog, user).subscribe(data => {\n      this._flashMessagesService.show('Successfully added a new blog', {cssClass: 'alert-success', timeout: 3000});\n      this.router.navigate(['/blog'])\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n}\n","<div class=\"container mt-5\">\n    <form (submit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Title</label>\n          <input type=\"text\" id=\"exampleFormControlInput1\" class=\"form-control\" aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" [(ngModel)]=\"title\" name=\"title\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlSelect1\">Tag</label>\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" [(ngModel)]=\"tag\" name=\"tag\">\n            <option>Work</option>\n            <option>Life</option>\n            <option>Leisure</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\">Content</label>\n          <textarea class=\"form-control md-textarea\" id=\"exampleFormControlTextarea1\" rows=\"10\" [(ngModel)]=\"content\" name=\"content\"></textarea>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service'\nimport { ValidateService } from '../../services/validate.service'\nimport { ProfileService } from '../../services/profile.service'\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any\n  avatar: String\n\n  constructor(private authService: AuthService, \n    private router: Router, \n    private _flashMessagesService: FlashMessagesService,\n    private validateService: ValidateService,\n    private profileService: ProfileService) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(data => {\n      const profile = data as any\n      this.user = profile.user\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n\n  onAvatarSubmit() {\n    if (!this.validateService.validateAvatarURL(this.avatar)) {\n      this._flashMessagesService.show('Please fill in a valid image URL', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    this.profileService.updateAvatar(this.user, this.avatar).subscribe(data => {\n      this._flashMessagesService.show('Successfully updated avatar', {cssClass: 'alert-success', timeout: 3000});\n      window.location.reload()\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n}\n","<div class=\"container\">\n  <h2 class=\"page-header\">{{user.name}}</h2>\n  <div  class=\"card flex-md-row mb-5 \" *ngIf=\"user\">\n    <img *ngIf=\"user.avatar != undefined\" src=\"{{user.avatar}}\" alt=\"...\" class=\"img-thumbnail\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\"><i class=\"material-icons\">face</i>Username : {{user.username}}</li>\n      <li class=\"list-group-item\"><i class=\"material-icons\">inbox</i>Email : {{user.email}}</li>\n    </ul>\n  </div>\n  <form (submit)=\"onAvatarSubmit()\">\n    <div class=\"form-group\">\n      <input class=\"form-control\" type=\"text\" placeholder=\"New avatar URL\" [(ngModel)]=\"avatar\" name=\"avatar\">\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </div>\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service'\nimport { FlashMessagesService } from 'angular2-flash-messages'\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String\n  username: String\n  email: String\n  password: String\n\n  constructor(private validateService: ValidateService, \n    private _flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    if (!this.validateService.validateRegister(user)) {\n      this._flashMessagesService.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    if (!this.validateService.validateEmail(this.email)) {\n      this._flashMessagesService.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    // register user\n    this.authService.registerUser(user).subscribe(data => {\n      if (data['success']) {\n        this._flashMessagesService.show('You are now registered', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login'])\n      } else {\n        this._flashMessagesService.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register'])\n      }\n    })\n  }\n\n}\n","<div>\n    <h2 class=\"page-header\">Register</h2>\n    <form (submit)=\"onRegisterSubmit()\" >\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-raised btn-primary\" value=\"Submit\">\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewblog',\n  templateUrl: './viewblog.component.html',\n  styleUrls: ['./viewblog.component.css']\n})\nexport class ViewblogComponent implements OnInit {\n  blog: any\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.blog = history.state.data\n  }\n\n}\n","<div class=\"container\">\n    <h1 class=\"mt-5\">{{blog.title}}</h1>\n    <strong class=\"d-inline-block mb-2 text-primary\">{{ blog.tag }}</strong>\n    <p class=\"lead\">\n        {{blog.content}}\n    </p>\n</div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n        private router: Router) {}\n\n    canActivate() {\n        if(this.authService.isLoggedIn()) {\n            return true\n        } else {\n            return this.router.navigate(['/login'])\n            return false\n        }\n    }\n\n}   ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any\n  user: any\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token)\n    localStorage.setItem('user', JSON.stringify(user))\n    this.authToken = token\n    this.user = user\n  }\n\n  getProfile() {\n    this.loadToken()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': this.authToken\n      })\n    }\n    return this.http.get('http://localhost:3000/users/profile', httpOptions)\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token')\n    this.authToken = token\n  }\n\n  logout() {\n    this.authToken = null\n    this.user = null\n    localStorage.clear()\n  }\n\n  isLoggedIn() {\n    return !this.jwtHelper.isTokenExpired()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(private http: HttpClient) { }\n\n  getBlogs(user) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': localStorage.getItem('id_token')\n      }),\n      params: {\n        'userid': user.id\n      }\n    }\n    return this.http.get('http://localhost:3000/users/blog',  httpOptions)\n  }\n\n  addNewBlog(blog, user) {\n    const body = {\n      userid: user.id,\n      title: blog.title,\n      tag: blog.title,\n      content: blog.content\n    }\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': localStorage.getItem('id_token')\n      }),\n    }\n    return this.http.post('http://localhost:3000/users/blog', body, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n  updateAvatar(user, newAvatar) {\n    const body = {\n      username: user.username,\n      avatar: newAvatar\n    }\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': localStorage.getItem('id_token')\n      })\n    }\n\n    return this.http.post('http://localhost:3000/users/updateAvatar', body, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined) {\n      return false\n    }\n    return true\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  validateAvatarURL(avatar) {\n    const re = /(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/g\n    return re.test(avatar)\n  }\n\n  validateBlog(blog) {\n    if (blog.title == undefined || blog.content == undefined || blog.tag == undefined) {\n      return false\n    }\n    return true\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}