{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/blog/blog.component.ts","webpack:///src/app/components/blog/blog.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/newblog/newblog.component.ts","webpack:///src/app/components/newblog/newblog.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/viewblog/viewblog.component.ts","webpack:///src/app/components/viewblog/viewblog.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/blog.service.ts","webpack:///src/app/services/profile.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","AppModule","config","declarations","providers","bootstrap","BlogComponent","blogService","user","JSON","parse","getBlogs","subscribe","data","blogs","err","console","log","HomeComponent","LoginComponent","authService","_flashMessagesService","router","username","password","authenticateUser","result","success","storeUserData","token","show","cssClass","timeout","navigate","msg","onLoginSubmit","NavbarComponent","logout","NewblogComponent","validateService","blog","tag","content","validateBlog","addNewBlog","onSubmit","ProfileComponent","profileService","getProfile","profile","validateAvatarURL","avatar","updateAvatar","window","location","reload","onAvatarSubmit","RegisterComponent","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","ViewblogComponent","history","state","AuthGuard","isLoggedIn","providedIn","AuthService","http","jwtHelper","headers","append","post","setItem","stringify","authToken","loadToken","httpOptions","get","clear","isTokenExpired","BlogService","params","body","userid","ProfileService","newAvatar","ValidateService","undefined","re","test","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { NewblogComponent } from './components/newblog/newblog.component'\nimport { ViewblogComponent } from './components/viewblog/viewblog.component'\nimport { AuthGuard } from './guards/auth.guard'\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'blog', component: BlogComponent, canActivate: [AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'newblog', component: NewblogComponent, canActivate: [AuthGuard]},\n  {path: 'blog/:id', component: ViewblogComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { BlogComponent } from './components/blog/blog.component'\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service'\nimport { AuthGuard } from './guards/auth.guard';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NewblogComponent } from './components/newblog/newblog.component';\nimport { ViewblogComponent } from './components/viewblog/viewblog.component';\n\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"id_token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    BlogComponent,\n    NewblogComponent,\n    ViewblogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter\n      }\n    }),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../../services/blog.service'\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  blogs: any\n\n  constructor(private blogService: BlogService) { }\n\n  ngOnInit(): void {\n    const user =  JSON.parse(localStorage.getItem('user'))\n    this.blogService.getBlogs(user).subscribe(data => {\n      this.blogs = (data as any).blogs\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div *ngFor=\"let blog of blogs; let i = index\">\n        <div *ngIf=\"i % 2 == 0\" class=\"row mb-2\">\n            <div class=\"col-md-6\">\n                <div class=\"card flex-md-row mb-4 box-shadow h-md-250\">\n                  <div class=\"card-body d-flex flex-column align-items-start\">\n                    <strong class=\"d-inline-block mb-2 text-primary\">{{ blog.tag }}</strong>\n                    <h3 class=\"mb-0\">\n                      <a class=\"text-dark\" href=\"#\">{{ blog.title }}</a>\n                    </h3>\n                    <p class=\"card-text mb-auto\">{{ blog.content | slice:0:200 }}...</p>\n                    <a [routerLink]=\"['/blog', blog._id]\" [state]=\"{data: blog}\">Continue reading</a>\n                  </div>\n                </div>\n            </div>\n            <div class=\"col-md-6\" *ngIf=\"i + 1 < blogs.length\">\n                <div class=\"card flex-md-row mb-4 box-shadow h-md-250\">\n                    <div class=\"card-body d-flex flex-column align-items-start\">\n                    <strong class=\"d-inline-block mb-2 text-primary\">{{ blogs[i+1].tag }}</strong>\n                    <h3 class=\"mb-0\">\n                        <a class=\"text-dark\" href=\"#\">{{ blogs[i+1].title }}</a>\n                    </h3>\n                    <p class=\"card-text mb-auto\">{{ blogs[i+1].content | slice:0:200 }}...</p>\n                    <a [routerLink]=\"['/blog', blogs[i+1]._id]\" [state]=\"{data: blogs[i+1]}\">Continue reading</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <a class=\"btn btn-raised btn-primary\" color=\"primary\" [routerLink]=\"['/newblog']\">New Blog</a> \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<main>\n  <section class=\"jumbotron text-center\">\n    <div class=\"container\">\n      <h1 class=\"jumbotron-heading\">MEAN Authentication App</h1>\n      <p class=\"lead text-muted\">Welcome to our custom MEAN authentication application built from scratch </p>\n      <div>\n        <a class=\"btn btn-raised btn-primary mr-2 \" color=\"primary\" [routerLink]=\"['/register']\">Register</a> \n        <a class=\"btn btn-raised\" [routerLink]=\"['/login']\">Login</a>\n      </div>\n    </div>\n  </section>\n</main>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService,\n    private _flashMessagesService: FlashMessagesService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      const result = data as any\n      if (result.success) {\n        this.authService.storeUserData(result.token, result.user)\n        this._flashMessagesService.show('You are now logged in', {cssClass: 'alert-success', timeout: 5000})\n        this.router.navigate(['/blog'])\n      } else {\n        this._flashMessagesService.show(result.msg, {cssClass: 'alert-danger', timeout: 5000})\n        this.router.navigate(['login'])\n      }\n    })\n  }\n}\n","<div class=\"container\">\n  <h2 class=\"page-header\" >Login</h2>\n  <form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"Username\">Username</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" [(ngModel)]=\"username\" name=\"username\">\n          </div>\n          <div class=\"form-group\">\n          <label for=\"Password\">Password</label>\n          <input type=\"password\" class=\"form-control\" placeholder=\" Enter Password\" [(ngModel)]=\"password\" name=\"password\">\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\">\n            <label class=\"form-check-label\" for=\"defaultCheck1\">\n              Remember Me\n            </label>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n    private _flashMessagesService: FlashMessagesService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  onLogoutClick() {\n    this.authService.logout()\n    this._flashMessagesService.show('You are logged out', {cssClass: 'alert-success', timeout: 5000})\n    this.router.navigate(['/login'])\n    return false\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li *ngIf=\"authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item active\">\n                <a class=\"nav-link\" [routerLink]=\"['/blog']\">Blogs <span class=\"sr-only\">(current)</span></a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav\">\n            <li *ngIf=\"authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n            </li>\n            <li *ngIf=\"!authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n            </li>\n            <li *ngIf=\"!authService.isLoggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n            </li>\n            <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\" (click)='onLogoutClick()'>Logout</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ValidateService } from '../../services/validate.service'\nimport { BlogService } from '../../services/blog.service'\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-newblog',\n  templateUrl: './newblog.component.html',\n  styleUrls: ['./newblog.component.css']\n})\nexport class NewblogComponent implements OnInit {\n  title: String\n  tag: String\n  content: String\n\n  constructor(private _flashMessagesService: FlashMessagesService, \n    private router: Router, \n    private validateService: ValidateService,\n    private blogService: BlogService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    const blog = {\n      title: this.title,\n      tag: this.tag,\n      content: this.content\n    }\n    const user =  JSON.parse(localStorage.getItem('user'))\n\n    if (!this.validateService.validateBlog(blog)) {\n      this._flashMessagesService.show('Please fill in all the fields of the blog', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n    \n    this.blogService.addNewBlog(blog, user).subscribe(data => {\n      this._flashMessagesService.show('Successfully added a new blog', {cssClass: 'alert-success', timeout: 3000});\n      this.router.navigate(['/blog'])\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n}\n","<div class=\"container mt-5\">\n    <form (submit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">Title</label>\n          <input type=\"text\" id=\"exampleFormControlInput1\" class=\"form-control\" aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" [(ngModel)]=\"title\" name=\"title\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlSelect1\">Tag</label>\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" [(ngModel)]=\"tag\" name=\"tag\">\n            <option>Work</option>\n            <option>Life</option>\n            <option>Leisure</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\">Content</label>\n          <textarea class=\"form-control md-textarea\" id=\"exampleFormControlTextarea1\" rows=\"10\" [(ngModel)]=\"content\" name=\"content\"></textarea>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service'\nimport { ValidateService } from '../../services/validate.service'\nimport { ProfileService } from '../../services/profile.service'\nimport { FlashMessagesService } from 'angular2-flash-messages'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any\n  avatar: String\n\n  constructor(private authService: AuthService, \n    private router: Router, \n    private _flashMessagesService: FlashMessagesService,\n    private validateService: ValidateService,\n    private profileService: ProfileService) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(data => {\n      const profile = data as any\n      this.user = profile.user\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n\n  onAvatarSubmit() {\n    if (!this.validateService.validateAvatarURL(this.avatar)) {\n      this._flashMessagesService.show('Please fill in a valid image URL', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    this.profileService.updateAvatar(this.user, this.avatar).subscribe(data => {\n      this._flashMessagesService.show('Successfully updated avatar', {cssClass: 'alert-success', timeout: 3000});\n      window.location.reload()\n    }, err => {\n      console.log(err)\n      return false\n    })\n  }\n}\n","<div class=\"container\">\n  <h2 class=\"page-header\">{{user.name}}</h2>\n  <div  class=\"card flex-md-row mb-5 \" *ngIf=\"user\">\n    <img *ngIf=\"user.avatar != undefined\" src=\"{{user.avatar}}\" alt=\"...\" class=\"img-thumbnail\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\"><i class=\"material-icons\">face</i>Username : {{user.username}}</li>\n      <li class=\"list-group-item\"><i class=\"material-icons\">inbox</i>Email : {{user.email}}</li>\n    </ul>\n  </div>\n  <form (submit)=\"onAvatarSubmit()\">\n    <div class=\"form-group\">\n      <input class=\"form-control\" type=\"text\" placeholder=\"New avatar URL\" [(ngModel)]=\"avatar\" name=\"avatar\">\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </div>\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service'\nimport { FlashMessagesService } from 'angular2-flash-messages'\nimport { AuthService } from '../../services/auth.service'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String\n  username: String\n  email: String\n  password: String\n\n  constructor(private validateService: ValidateService, \n    private _flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    if (!this.validateService.validateRegister(user)) {\n      this._flashMessagesService.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    if (!this.validateService.validateEmail(this.email)) {\n      this._flashMessagesService.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\n      return false\n    }\n\n    // register user\n    this.authService.registerUser(user).subscribe(data => {\n      if (data['success']) {\n        this._flashMessagesService.show('You are now registered', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login'])\n      } else {\n        this._flashMessagesService.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register'])\n      }\n    })\n  }\n\n}\n","<div>\n    <h2 class=\"page-header\">Register</h2>\n    <form (submit)=\"onRegisterSubmit()\" >\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-raised btn-primary\" value=\"Submit\">\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewblog',\n  templateUrl: './viewblog.component.html',\n  styleUrls: ['./viewblog.component.css']\n})\nexport class ViewblogComponent implements OnInit {\n  blog: any\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.blog = history.state.data\n  }\n\n}\n","<div class=\"container\">\n    <h1 class=\"mt-5\">{{blog.title}}</h1>\n    <strong class=\"d-inline-block mb-2 text-primary\">{{ blog.tag }}</strong>\n    <p class=\"lead\">\n        {{blog.content}}\n    </p>\n</div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n        private router: Router) {}\n\n    canActivate() {\n        if(this.authService.isLoggedIn()) {\n            return true\n        } else {\n            return this.router.navigate(['/login'])\n            return false\n        }\n    }\n\n}   ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any\n  user: any\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token)\n    localStorage.setItem('user', JSON.stringify(user))\n    this.authToken = token\n    this.user = user\n  }\n\n  getProfile() {\n    this.loadToken()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': this.authToken\n      })\n    }\n    return this.http.get('http://localhost:3000/users/profile', httpOptions)\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token')\n    this.authToken = token\n  }\n\n  logout() {\n    this.authToken = null\n    this.user = null\n    localStorage.clear()\n  }\n\n  isLoggedIn() {\n    return !this.jwtHelper.isTokenExpired()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(private http: HttpClient) { }\n\n  getBlogs(user) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': localStorage.getItem('id_token')\n      }),\n      params: {\n        'userid': user.id\n      }\n    }\n    return this.http.get('http://localhost:3000/users/blog',  httpOptions)\n  }\n\n  addNewBlog(blog, user) {\n    const body = {\n      userid: user.id,\n      title: blog.title,\n      tag: blog.title,\n      content: blog.content\n    }\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': localStorage.getItem('id_token')\n      }),\n    }\n    return this.http.post('http://localhost:3000/users/blog', body, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n  updateAvatar(user, newAvatar) {\n    const body = {\n      username: user.username,\n      avatar: newAvatar\n    }\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': localStorage.getItem('id_token')\n      })\n    }\n\n    return this.http.post('http://localhost:3000/users/updateAvatar', body, httpOptions)\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined) {\n      return false\n    }\n    return true\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  validateAvatarURL(avatar) {\n    const re = /(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/g\n    return re.test(avatar)\n  }\n\n  validateBlog(blog) {\n    if (blog.title == undefined || blog.content == undefined || blog.tag == undefined) {\n      return false\n    }\n    return true\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}